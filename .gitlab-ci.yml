stages:
  - test_backend
  - test_frontend
  - build
  - deploy

# Run unit tests
test_backend:
  stage: test_backend
  tags:
    - nas
    - shell
  before_script:
    - export PATH=$PATH:/home/gitlab-runner/.local/bin
    - pipenv install --dev
  script:
    - pipenv run coverage run --source='backend' --omit='backend/tests.py' -m unittest discover backend/
    - pipenv run coverage report -m --precision=1
  coverage: '/TOTAL.*\s+(\d+\.\d+\%)$/'
  only:
    - master

test_frontend:
  stage: test_frontend
  image: node:20-bullseye
  tags:
    - nas
    - docker
  script:
    - npm install
    - npm test -- --coverage
  coverage: '/All files.*\|.*\|.*\|.*\|.*\s+(\d+\.\d+)/'
  only:
    - master

# Build local image + multiarch image for docker hub
build:
  stage: build
  tags:
    - nas
    - shell
  before_script:
    - docker info
  script:
    # Increment most-recent version tag, build local image
    - 'export IMAGE_NAME="jamedeus/qr-generator"'
    - 'export LAST_TAG=$(docker images --format "{{.Repository}}:{{.Tag}}" | grep "^${IMAGE_NAME}:[0-9]*\.[0-9]*$" | sort --version-sort | tail -n 1 | cut -d\: -f 2)'
    - "export NEW_TAG=$(echo $LAST_TAG | awk -F. '{$NF = $NF + 1;} 1' OFS=.)"
    - 'docker build --platform linux/amd64 -t $IMAGE_NAME:$NEW_TAG . -f Dockerfile'
    # Build multiarch image, push to docker hub with both version and latest tags
    - 'docker login -u $DOCKERHUB_USERNAME -p $DOCKERHUB_PASSWORD'
    - 'docker buildx create --name multiarch-builder'
    - 'docker buildx use multiarch-builder'
    - 'docker buildx build --platform linux/arm64,linux/amd64 -t $IMAGE_NAME:$NEW_TAG -t $IMAGE_NAME:latest --push .'
    - 'docker buildx rm multiarch-builder'
    - 'docker logout'
  only:
    - master

# Deploy most-recent image
deploy:
  stage: deploy
  tags:
    - nas
    - shell
  before_script:
    - docker info
  script:
    - 'export IMAGE_NAME="jamedeus/qr-generator"'
    - 'export LAST_TAG=$(docker images --format "{{.Repository}}:{{.Tag}}" | grep "^${IMAGE_NAME}:[0-9]*\.[0-9]*$" | sort --version-sort | tail -n 1 | cut -d\: -f 2)'
    - 'sed -i "s|$IMAGE_NAME:[0-9]*\.[0-9]*|$IMAGE_NAME:$LAST_TAG|g" /home/jamedeus/docker/docker-compose.yaml'
    - 'docker compose -f /home/jamedeus/docker/docker-compose.yaml up -d'
  only:
    - master
